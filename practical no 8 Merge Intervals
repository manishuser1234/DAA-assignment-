def merge(intervals):
    # If there are no intervals, return an empty list
    if not intervals:
        return []

    # Sort the intervals based on the starting time
    intervals.sort(key=lambda x: x[0])

    # Initialize the merged intervals with the first interval
    merged = [intervals[0]]

    # Iterate through the remaining intervals
    for i in range(1, len(intervals)):
        # Get the last interval in the merged list
        last_merged = merged[-1]
        
        # If the current interval overlaps with the last merged interval, merge them
        if intervals[i][0] <= last_merged[1]:
            last_merged[1] = max(last_merged[1], intervals[i][1])
        else:
            # Otherwise, add the current interval as is
            merged.append(intervals[i])

    return merged

# Example usage:
intervals = [[1, 3], [2, 6], [8, 10], [15, 18]]
result = merge(intervals)
print(f"Merged intervals: {result}")
